[build-system]
# Minimum requirements for the build system to execute.
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "zlai"
version = "0.3.113"
description = "A LLM Agent Python package."
authors = ["chensy cao <chensy.cao@foxmail.com>"]
maintainers = []
license = "MIT"
readme = "README.md"
homepage = "https://zlai-llm.github.io/zlai-doc/#/"
repository = "https://github.com/zlai-llm/zlai"
keywords = ["llm", "agent", "embedding", "chatbot", "prompt"]
classifiers = [
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "zlai" },
]


[tool.poetry.dependencies]
# base
python = ">=3.9,<3.9.7 || >3.9.7,<4.0"
pandas = ">=1.0"
requests = "^2.32.3"
chardet = "^5.2.0"
pydantic = "^2.8.2"
numpy = ">=1.23.5"
tqdm = ">=4.65.0"
termcolor = ">=2.3.0"
colorama = ">=0.4.6"

# LLMs API
openai = { version = ">=1.26.0", optional = true }
zhipuai = { version = ">=2.0.1", optional = true }
dashscope = { version = ">=1.14.1", optional = true }
tencentcloud-sdk-python = { version = "^3.0.1182", optional = true }
qianfan = { version = ">=0.3.18", optional = true }

# vector_db
pymilvus = { version = ">=2.4.1", optional = true }
elasticsearch = { version = "^8.14.0", optional = true }
elasticsearch-dsl = { version = "^8.14.0", optional = true }

# langchain
langchain-core = { version = "^0.2.11", optional = true }
langchain-experimental = { version = "^0.0.62", optional = true }

# web
httpx = { version = ">=0.24.1", optional = true }
selenium = { version = ">=4.19.0", optional = true }

# database
pyspark = { version = "^3.5.1", optional = true }
sqlalchemy = { version = ">=2.0.20", optional = true }

# echarts
pyecharts = { version = ">=2.0.5", optional = true }

# streamlit
streamlit = { version = "^1.36.0", optional = true }
bs4 = {version = "^0.0.2", optional = true}

# unstructured
unstructured = { version = ">=0.10.5", extras = ["pdf"], optional = true }

# LLM API
fastapi = {version = "^0.111.1", optional = true}
uvicorn = {version = "^0.30.3", optional = true}
transformers = {version = "^4.43.3", optional = true}
click = {version = "^8.1.7", optional = true}
sentence-transformers = {version = "^3.0.1", optional = true}
torch = {version = "2.2.0", optional = true}
accelerate = {version = "^0.33.0", optional = true}
diffusers = {version = "0.30.0", optional = true}
cachetools = "^5.4.0"


[tool.poetry.group.streamlit.dependencies]
streamlit = "^1.36.0"
bs4 = "^0.0.2"


[tool.poetry.group.api.dependencies]
zhipuai = ">=2.0.1"
openai = ">=1.26.0"
dashscope = ">=1.14.1"
tencentcloud-sdk-python = "^3.0.1182"
qianfan = ">=0.3.18"


[tool.poetry.group.spark.dependencies]
pyspark = "^3.5.1"


[tool.poetry.group.vector_db.dependencies]
pymilvus = ">=2.4.1"
elasticsearch = ">=8.12.0"
elasticsearch-dsl = ">=8.12.0"


[tool.poetry.group.web.dependencies]
httpx = ">=0.24.1"
selenium = ">=4.19.0"


[tool.poetry.group.langchain.dependencies]
langchain-core = "^0.2.11"
langchain-experimental = "^0.0.62"


[tool.poetry.group.local.dependencies]
click = "^8.1.7"
torch = "2.2.0"
fastapi = "^0.111.1"
uvicorn = "^0.30.3"
transformers = "^4.43.3"
sentence-transformers = "^3.0.1"
accelerate = "^0.33.0"
diffusers = "0.30.0"
onnxruntime = "^1.19.0"
importlib-resources = "^6.4.3"


[tool.poetry.group.cosy_voice.dependencies]
torchaudio = "2.2.0"


[tool.poetry.extras]
all = [
    "openai", "zhipuai", "dashscope", "tencentcloud-sdk-python", "qianfan",
    "pymilvus", "elasticsearch", "elasticsearch-dsl",
    "langchain-core", "langchain-experimental",
    "httpx", "selenium",
    "pyspark", "sqlalchemy",
    "pyecharts",
    "streamlit", "bs4",
    "unstructured",
    "fastapi", "uvicorn", "transformers", "click", "sentence-transformers", "torch", "accelerate",
    "diffusers",
]
tiny = ["openai", "zhipuai"]
api = ["zhipuai", "openai", "dashscope", "tencentcloud-sdk-python", "qianfan"]
vector_db = ["pymilvus", "elasticsearch", "elasticsearch-dsl"]
langchain = ["langchain-core", "langchain-experimental"]
web = ["httpx", "selenium"]
database = ["pyspark", "sqlalchemy"]
echarts = ["pyecharts"]
streamlit = ["streamlit", "bs4"]
unstructured = ["unstructured"]
local = [
    "fastapi", "uvicorn", "transformers", "click", "sentence-transformers", "torch", "accelerate",
    "diffusers"
]


[tool.poetry.urls]
"Bug Tracker" = "https://github.com/zlai-llm/zlai/issues"


[tool.poetry.scripts]
zlai_models = "zlai.models.apps.app:models"
zlai_model = "zlai.models.apps.completion:chat_completion_model"
zlai_agent = "zlai.streamlit.web.run:run_streamlit_app"
zlai_chat = "zlai.streamlit.web.run:run_streamlit_app"
